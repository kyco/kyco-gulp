@mixin linear-gradient($fallBackColour, $angle, $color-stops...) {
	$_angle-with-vendor-prefix: "";
	$_angle: "";

	@if $angle == "to top" or $angle == "bottom" {
		$_angle-with-vendor-prefix: bottom;
		$_angle: to top;
	} @else if $angle == "to right" or $angle == "left" {
		$_angle-with-vendor-prefix: left;
		$_angle: to right;
	} @else if $angle == "to bottom" or $angle == "top" {
		$_angle-with-vendor-prefix: top;
		$_angle: to bottom;
	} @else if $angle == "to left" or $angle == "right" {
		$_angle-with-vendor-prefix: right;
		$_angle: to left;
	} @else if $angle == "to top right" or $angle == "bottom left" {
		$_angle-with-vendor-prefix: bottom left;
		$_angle: to top right;
	} @else if $angle == "to bottom right" or $angle == "top left" {
		$_angle-with-vendor-prefix: top left;
		$_angle: to bottom right;
	} @else if $angle == "to bottom left" or $angle == "top right" {
		$_angle-with-vendor-prefix: top right;
		$_angle: to bottom left;
	} @else if $angle == "to top left" or $angle == "bottom right" {
		$_angle-with-vendor-prefix: bottom right;
		$_angle: to top left;
	} @else {
		$_angle-with-vendor-prefix: $angle % 360;
		$_angle: (90 - $angle) % 360;
	}

	background: $fallBackColour;
	background: -webkit-linear-gradient($_angle-with-vendor-prefix, $color-stops);
	background: -moz-linear-gradient($_angle-with-vendor-prefix, $color-stops);
	background: -o-linear-gradient($_angle-with-vendor-prefix, $color-stops);
	background: linear-gradient($_angle, $color-stops);
}

@mixin transition($property, $duration, $easing: ease-in-out) {
	-webkit-transition: $property $duration $easing;
	-moz-transition: $property $duration $easing;
	-ms-transition: $property $duration $easing;
	-o-transition: $property $duration $easing;
	transition: $property $duration $easing;
}

@mixin transform($transformation) {
	-webkit-transform: $transformation;
	-moz-transform: $transformation;
	-ms-transform: $transformation;
	-o-transform: $transformation;
	transform: $transformation;
}

@mixin user-select($select) {
	-webkit-touch-callout: $select;
	-webkit-user-select: $select;
	-khtml-user-select: $select;
	-moz-user-select: $select;
	-ms-user-select: $select;
	user-select: $select;
}

/* ____________________ Arrow mixin: ____________________ */

@mixin arrow($direction, $size, $colour) {
	display: block;
	height: 0;
	width: 0;

	@if $direction == 'top' {
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size solid $colour;
	} @else if $direction == 'right' {
		border-top: $size solid transparent;
		border-bottom: $size solid transparent;
		border-left: $size solid $colour;
	} @else if $direction == 'bottom' {
		border-top: $size solid $colour;
		border-right: $size solid transparent;
		border-left: $size solid transparent;
	} @else if $direction == 'left' {
		border-top: $size solid transparent;
		border-right: $size solid $colour;
		border-bottom: $size solid transparent;
	} @else if $direction == 'top-left' {
		border-top: $size solid $colour;
		border-right: $size solid transparent;	
	} @else if $direction == 'top-right' {
		border-top: $size solid $colour;
		border-left: $size solid transparent;
	} @else if $direction == 'bottom-left' {
		border-bottom: $size solid $colour;
		border-right: $size solid transparent;	
	} @else if $direction == 'bottom-right' {
		border-bottom: $size solid $colour;
		border-left: $size solid transparent;
	}
}
